<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            ">

	<!-- 定义被代理者 -->
	<bean id="sleepable" class="com.qian.demospringaop.servvice.impl.SleepableImpl"></bean>

	<!-- 定义通知内容，也就是切入点执行前后需要做的事情 -->
	<bean id="sleepHelper" class="com.qian.demospringaop.aop.SleepHelper"></bean>

	<!-- 定义切入点位置 -->
	<bean id="sleepPointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut">
		<property name="pattern" value=".*sleep"></property>
	</bean>

	<!-- 使切入点与通知相关联，完成切面配置 -->
	<bean id="sleepHelperAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="sleepHelper"></property>
		<property name="pointcut" ref="sleepPointcut"></property>
	</bean>

	<!-- 设置代理 -->
	<!--<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		&lt;!&ndash; 代理的对象，有睡觉能力 &ndash;&gt;
		<property name="target" ref="sleepable"></property>
		&lt;!&ndash; 使用切面 &ndash;&gt;
		<property name="interceptorNames" value="sleepHelperAdvisor"></property>
		&lt;!&ndash; 代理接口，睡觉接口 &ndash;&gt;
		<property name="proxyInterfaces" value="com.qian.demospringaop.servvice.Sleepable"></property>
	</bean>-->

	<!--将配置文件中设置代理的代码去掉，加上：
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
	然后，在Test中，直接获取me对象，执行sleep方法，就可以实现同样的功能！
	通过自动匹配，切面会自动匹配符合切入点的bean，会被自动代理，实现功能-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

</beans>